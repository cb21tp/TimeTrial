plot(allReps[,1],allReps[,2], main = "with Rep", col = plotColoring, pch = 16, asp = 1)
plot(rep1Embedding[,1],rep1Embedding[,2],"o", main = "without Rep", pch = 16, asp = 1)
plot(rep1Embedding[,1],rep1Embedding[,2], main = "without Rep", pch = 16, asp = 1)
}
#for(i in 1:6){
#makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
#}
imput_rep1Cycle <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1Cycle, newxValsSeq = seq(0.5,35.5,0.5))
for(i in 1:6){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
#for(i in 1:6){
#makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
#}
for(i in 1:6){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
imput_rep1Cycle <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1Cycle, newxValsSeq = seq(0.5,35.5,0.5))
for(i in 1:6){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
imput_rep1Cycle <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1Cycle, newxValsSeq = seq(0.5,35.5,0.5))
for(i in 1:6){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
}
imput_rep1NonC <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1NonC, newxValsSeq = seq(0.5,35.5,0.5))
for(i in 1:6){
makeComparrisonPlots(imput_rep1NonC,rep2NonC,rep3NonC,i)
}
par(mfrow = c(2,3))
xValtoImput <- seq(0.5,35.5,0.5)
imput_rep1Cycle <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1Cycle, newxValsSeq = xValtoImput)
plot(timePoints_Rep1,rep1Cycle,"o")
lines(timePoints_Rep23,rep2Cycle,"o", col = "red")
lines(timePoints_Rep23,rep3Cycle,"o", col = "blue")
lines(xValtoImput,imput_rep1Cycle,"o", col = "green")
plot(timePoints_Rep23,rep2Cycle,"o")
plot(timePoints_Rep23,rep3Cycle,"o")
imput_rep1NonC <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1NonC, newxValsSeq = xValtoImput)
plot(timePoints_Rep1,rep1NonC,"o")
lines(timePoints_Rep23,rep2NonC,"o", col = "red")
lines(timePoints_Rep23,rep3NonC,"o", col = "blue")
lines(xValtoImput,imput_rep1NonC,"o", col = "green")
plot(timePoints_Rep23,rep2NonC,"o")
plot(timePoints_Rep23,rep3NonC,"o")
set.seed(123)
# length of Sampling
Length <- 36
#Define Sampling Scheme
timePoints_Rep1<- seq(0,Length ,2)
timePoints_Rep23 <- seq(0,Length ,6)
#timePoints_Rep1<- seq(2,36,2)
#timePoints_Rep23 <- seq(6,36,6)
#Number of Samples Total
conditionDays <- 10
print(paste0("Samples in Experiment: ", conditionDays*(length(timePoints_Rep1) + 2*length(timePoints_Rep23))))
#Noise Level to Add
NL <- .1
#Create Cycling Replicates
rep1Cycle <- cos(timeToRadians(timePoints_Rep1)) + NL*rnorm(n = length(timePoints_Rep1),mean = 0,sd= 1)
rep2Cycle <- cos(timeToRadians(timePoints_Rep23)) + NL*rnorm(n = length(timePoints_Rep23),mean = 0,sd= 1)
rep3Cycle <- cos(timeToRadians(timePoints_Rep23)) + NL*rnorm(n = length(timePoints_Rep23),mean = 0,sd= 1)
names(rep1Cycle) <- timePoints_Rep1
names(rep2Cycle) <- timePoints_Rep23
names(rep3Cycle) <- timePoints_Rep23
#Create Non Cycling Replicates
rep1NonC <- rep(0,length(timePoints_Rep1)) + NL*rnorm(n = length(timePoints_Rep1),mean = 0,sd= 1)
rep2NonC <- rep(0,length(timePoints_Rep23)) + NL*rnorm(n = length(timePoints_Rep23),mean = 0,sd= 1)
rep3NonC <- rep(0,length(timePoints_Rep23))+ NL*rnorm(n = length(timePoints_Rep23),mean = 0,sd= 1)
names(rep1NonC) <- timePoints_Rep1
names(rep2NonC) <- timePoints_Rep23
names(rep3NonC) <- timePoints_Rep23
par(mfrow = c(2,3))
xValtoImput <- seq(0.5,35.5,0.5)
imput_rep1Cycle <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1Cycle, newxValsSeq = xValtoImput)
plot(timePoints_Rep1,rep1Cycle,"o")
lines(timePoints_Rep23,rep2Cycle,"o", col = "red")
lines(timePoints_Rep23,rep3Cycle,"o", col = "blue")
lines(xValtoImput,imput_rep1Cycle,"o", col = "green")
plot(timePoints_Rep23,rep2Cycle,"o")
plot(timePoints_Rep23,rep3Cycle,"o")
imput_rep1NonC <- getImputedTS(xVal = timePoints_Rep1,yVal = rep1NonC, newxValsSeq = xValtoImput)
plot(timePoints_Rep1,rep1NonC,"o")
lines(timePoints_Rep23,rep2NonC,"o", col = "red")
lines(timePoints_Rep23,rep3NonC,"o", col = "blue")
lines(xValtoImput,imput_rep1NonC,"o", col = "green")
plot(timePoints_Rep23,rep2NonC,"o")
plot(timePoints_Rep23,rep3NonC,"o")
#Function For Imputing Points For Lower Sampled Relicates
getImputedEmbedding <- function(tsOriginal,tsRep,delay){
TS <- tsOriginal
TS[names(tsRep)] <- tsRep
embedding <- buildTakens_ndim(x = TS,dim = 3,delay = delay)
#only select points for the embedding that come from the new replicat to be added
sel <- which(embedding[,1]%in%tsRep | embedding[,2]%in%tsRep)
return(embedding[sel,])
}
getImputedTS <- function(xVal, yVal, newxValsSeq){
spline <- smooth.spline(x = xVal,y = yVal,spar = 0)
output <- predict(newxValsSeq, object = spline)$y
names(output) <- newxValsSeq
return(output)
}
#Making Plots for With and Without Replicates
makeComparrisonPlots <- function(rep1Cycle,rep2Cycle,rep3Cycle,delay){
par(mfrow = c(2,2))
#Get Embedding For First Replicate
rep1Embedding <- buildTakens_ndim(x = rep1Cycle,dim = 3,delay = delay)
plot(rep1Embedding[,1],rep1Embedding[,2],"o", main = "with Rep Color", pch = 16, asp = 1)
#Imput Embedding For Consecutive Replicates
rep2Embedding <- getImputedEmbedding(rep1Cycle,rep2Cycle,delay)
rep3Embedding <- getImputedEmbedding(rep1Cycle,rep3Cycle,delay)
#Add Lines of Consecutive Replicates
lines(rep2Embedding[,1],rep2Embedding[,2],"o", col = "red", pch = 16)
lines(rep3Embedding[,1],rep3Embedding[,2],"o", col = "blue", pch = 16)
#get Coloring For Each Replicate
plotColoring <- c(
rep('black', length(rep1Embedding[,1])),
rep('red', length(rep2Embedding[,1])),
rep('blue', length(rep3Embedding[,1])))
#merge All replicates together
allReps <- rbind(rep1Embedding[,1:2],rep2Embedding[,1:2],rep3Embedding[,1:2])
#plot All replicates
plot(allReps[,1],allReps[,2], main = "with Rep", col = plotColoring, pch = 16, asp = 1)
plot(rep1Embedding[,1],rep1Embedding[,2],"o", main = "without Rep", pch = 16, asp = 1)
plot(rep1Embedding[,1],rep1Embedding[,2], main = "without Rep", pch = 16, asp = 1)
}
for(i in 1:6){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 1:6){
makeComparrisonPlots(imput_rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 6:12){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 6:12){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 6:12){
makeComparrisonPlots(imput_rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 6:11){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 6:11){
makeComparrisonPlots(imput_rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 1:24){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:24){
makeComparrisonPlots(imput_rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:24){
makeComparrisonPlots(imput_rep1NonC,rep2NonC,rep3NonC,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1Cycle,rep2Cycle,rep3Cycle,i)
}
for(i in 1:6){
makeComparrisonPlots(rep1NonC,rep2NonC,rep3NonC,i)
}
setwd("~/Desktop/CyclingMethodsReview/SamplingProtocolsReview/Scripts")
plot(c(1,2),c(1,2))
source('~/Desktop/CyclingMethodsReview/SamplingProtocolsReview/Scripts/TimeCycleAnalysis.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/AUCplotAll.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/AUCplotAll.R', echo=TRUE)
x <- "///"
grep("///",x)
x <- c("1///2","Z")
grep("///",x)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
setwd("~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts")
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
test <- read.csv("../Data/Raw/RawData/NoiseLV_0.4_BioRep_3.csv", row.names = 1, header = T)
test <- read.csv("../Data/Raw/RawData/NoiseLV_0.4_BioRep_3.csv", row.names = 1, header = T)
plot(1:test[1,], test[1,], "o")
plot(1:length(test[1,]), test[1,], "o")
test <- read.csv("../Data/Raw/RawData2/NoiseLV_0.4_BioRep_3.csv", row.names = 1, header = T)
plot(1:length(test[1,]), test[1,], "o")
test <- read.csv("../Data/Raw/RawData2/NoiseLV_0.4_BioRep_3.csv", row.names = 1, header = T)
test <- read.csv("../Data/Raw/RawData/NoiseLV_0.4_BioRep_3.csv", row.names = 1, header = T)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/AvgReplicateDataFrames.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/AvgReplicateDataFrames.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/CollateReplicateDataFrames.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/CollateReplicateDataFrames.R', echo=TRUE)
makeSingleDF <-function(input,output){
data <- read.csv(paste0(loc,"NoiseLV_0_BioRep_1.csv"), row.names = 1, header = T)
data1 <- read.csv(paste0(input,"NoiseLV_0_BioRep_2.csv"), row.names = 1, header = T)
data2 <- read.csv(paste0(input,"NoiseLV_0_BioRep_3.csv"), row.names = 1, header = T)
data3 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_1.csv"), row.names = 1, header = T)
data4 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_2.csv"), row.names = 1, header = T)
data5 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_3.csv"), row.names = 1, header = T)
data6 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_1.csv"), row.names = 1, header = T)
data7 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_2.csv"), row.names = 1, header = T)
data8 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_3.csv"), row.names = 1, header = T)
data9 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_1.csv"), row.names = 1, header = T)
data10 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_2.csv"), row.names = 1, header = T)
data11 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_3.csv"), row.names = 1, header = T)
data12 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_1.csv"), row.names = 1, header = T)
data13 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_2.csv"), row.names = 1, header = T)
data14 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_3.csv"), row.names = 1, header = T)
df.list <- list(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
names(df.list) <- c("NoiseLV_0_BioRep_1","NoiseLV_0_BioRep_2","NoiseLV_0_BioRep_3",
"NoiseLV_0.1_BioRep_1","NoiseLV_0.1_BioRep_2","NoiseLV_0.1_BioRep_3",
"NoiseLV_0.2_BioRep_1","NoiseLV_0.2_BioRep_2","NoiseLV_0.2_BioRep_3",
"NoiseLV_0.3_BioRep_1","NoiseLV_0.3_BioRep_2","NoiseLV_0.3_BioRep_3",
"NoiseLV_0.4_BioRep_1","NoiseLV_0.4_BioRep_2","NoiseLV_0.4_BioRep_3")
#rm(input,data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
save.image(file = paste0("../Data/Raw2/",output))
}
makeSingleDF("../Data/Raw2/Concate/Con_","../Data/Raw2/RawData_Con.Rdata")
#SubSample the Data
makeSingleDF <-function(input,output){
data <- read.csv(paste0(input,"NoiseLV_0_BioRep_1.csv"), row.names = 1, header = T)
data1 <- read.csv(paste0(input,"NoiseLV_0_BioRep_2.csv"), row.names = 1, header = T)
data2 <- read.csv(paste0(input,"NoiseLV_0_BioRep_3.csv"), row.names = 1, header = T)
data3 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_1.csv"), row.names = 1, header = T)
data4 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_2.csv"), row.names = 1, header = T)
data5 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_3.csv"), row.names = 1, header = T)
data6 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_1.csv"), row.names = 1, header = T)
data7 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_2.csv"), row.names = 1, header = T)
data8 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_3.csv"), row.names = 1, header = T)
data9 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_1.csv"), row.names = 1, header = T)
data10 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_2.csv"), row.names = 1, header = T)
data11 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_3.csv"), row.names = 1, header = T)
data12 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_1.csv"), row.names = 1, header = T)
data13 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_2.csv"), row.names = 1, header = T)
data14 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_3.csv"), row.names = 1, header = T)
df.list <- list(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
names(df.list) <- c("NoiseLV_0_BioRep_1","NoiseLV_0_BioRep_2","NoiseLV_0_BioRep_3",
"NoiseLV_0.1_BioRep_1","NoiseLV_0.1_BioRep_2","NoiseLV_0.1_BioRep_3",
"NoiseLV_0.2_BioRep_1","NoiseLV_0.2_BioRep_2","NoiseLV_0.2_BioRep_3",
"NoiseLV_0.3_BioRep_1","NoiseLV_0.3_BioRep_2","NoiseLV_0.3_BioRep_3",
"NoiseLV_0.4_BioRep_1","NoiseLV_0.4_BioRep_2","NoiseLV_0.4_BioRep_3")
#rm(input,data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
save.image(file = output)
}
makeSingleDF("../Data/Raw2/Concate/Con_","../Data/Raw2/RawData_Con.Rdata")
makeSingleDF("../Data/Raw2/Avg/Avg_","../Data/Raw2/RawData_Avg.Rdata")
makeSingleDF("../Data/Raw2/RawData/","../Data/Raw2/RawData.Rdata")
makeSingleDF("../Data/Raw2/Avg/Avg_","../Data/Raw2/RawData_Avg.Rdata")
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/AvgReplicateDataFrames.R', echo=TRUE)
makeSingleDF("../Data/Raw2/Avg/Avg_","../Data/Raw2/RawData_Avg.Rdata")
#SubSample the Data
makeSingleDF <-function(input,output){
data <- read.csv(paste0(input,"NoiseLV_0_BioRep_1.csv"), row.names = 1, header = T)
data1 <- read.csv(paste0(input,"NoiseLV_0_BioRep_2.csv"), row.names = 1, header = T)
data2 <- read.csv(paste0(input,"NoiseLV_0_BioRep_3.csv"), row.names = 1, header = T)
data3 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_1.csv"), row.names = 1, header = T)
data4 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_2.csv"), row.names = 1, header = T)
data5 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_3.csv"), row.names = 1, header = T)
data6 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_1.csv"), row.names = 1, header = T)
data7 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_2.csv"), row.names = 1, header = T)
data8 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_3.csv"), row.names = 1, header = T)
data9 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_1.csv"), row.names = 1, header = T)
data10 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_2.csv"), row.names = 1, header = T)
data11 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_3.csv"), row.names = 1, header = T)
data12 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_1.csv"), row.names = 1, header = T)
data13 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_2.csv"), row.names = 1, header = T)
data14 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_3.csv"), row.names = 1, header = T)
df.list <- list(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
names(df.list) <- c("NoiseLV_0_BioRep_1","NoiseLV_0_BioRep_2","NoiseLV_0_BioRep_3",
"NoiseLV_0.1_BioRep_1","NoiseLV_0.1_BioRep_2","NoiseLV_0.1_BioRep_3",
"NoiseLV_0.2_BioRep_1","NoiseLV_0.2_BioRep_2","NoiseLV_0.2_BioRep_3",
"NoiseLV_0.3_BioRep_1","NoiseLV_0.3_BioRep_2","NoiseLV_0.3_BioRep_3",
"NoiseLV_0.4_BioRep_1","NoiseLV_0.4_BioRep_2","NoiseLV_0.4_BioRep_3")
#rm(input,data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
save.image(file = output)
}
makeSingleDF("../Data/Raw2/Avg/Avg_","../Data/Raw2/RawData_Avg.Rdata")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Processed/Rain/RainData.Rdata")
df.list[[1]]
df.list[[2]]
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw/RawData_Con.Rdata")
df.list[[2]]
df.list[[2]][1,]
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw2/RawData_Con.Rdata")
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw2/RawData_Con.Rdata")
#SubSample the Data
makeSingleDF <-function(input,output){
data <- read.csv(paste0(input,"NoiseLV_0_BioRep_1.csv"), row.names = 1, header = T)
data1 <- read.csv(paste0(input,"NoiseLV_0_BioRep_2.csv"), row.names = 1, header = T)
data2 <- read.csv(paste0(input,"NoiseLV_0_BioRep_3.csv"), row.names = 1, header = T)
data3 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_1.csv"), row.names = 1, header = T)
data4 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_2.csv"), row.names = 1, header = T)
data5 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_3.csv"), row.names = 1, header = T)
data6 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_1.csv"), row.names = 1, header = T)
data7 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_2.csv"), row.names = 1, header = T)
data8 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_3.csv"), row.names = 1, header = T)
data9 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_1.csv"), row.names = 1, header = T)
data10 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_2.csv"), row.names = 1, header = T)
data11 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_3.csv"), row.names = 1, header = T)
data12 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_1.csv"), row.names = 1, header = T)
data13 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_2.csv"), row.names = 1, header = T)
data14 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_3.csv"), row.names = 1, header = T)
df.list <- list(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
names(df.list) <<- c("NoiseLV_0_BioRep_1","NoiseLV_0_BioRep_2","NoiseLV_0_BioRep_3",
"NoiseLV_0.1_BioRep_1","NoiseLV_0.1_BioRep_2","NoiseLV_0.1_BioRep_3",
"NoiseLV_0.2_BioRep_1","NoiseLV_0.2_BioRep_2","NoiseLV_0.2_BioRep_3",
"NoiseLV_0.3_BioRep_1","NoiseLV_0.3_BioRep_2","NoiseLV_0.3_BioRep_3",
"NoiseLV_0.4_BioRep_1","NoiseLV_0.4_BioRep_2","NoiseLV_0.4_BioRep_3")
rm(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
save.image(file = output)
}
makeSingleDF("../Data/Raw2/Concate/Con_","../Data/Raw2/RawData_Con.Rdata")
#SubSample the Data
makeSingleDF <-function(input,output){
data <- read.csv(paste0(input,"NoiseLV_0_BioRep_1.csv"), row.names = 1, header = T)
data1 <- read.csv(paste0(input,"NoiseLV_0_BioRep_2.csv"), row.names = 1, header = T)
data2 <- read.csv(paste0(input,"NoiseLV_0_BioRep_3.csv"), row.names = 1, header = T)
data3 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_1.csv"), row.names = 1, header = T)
data4 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_2.csv"), row.names = 1, header = T)
data5 <- read.csv(paste0(input,"NoiseLV_0.1_BioRep_3.csv"), row.names = 1, header = T)
data6 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_1.csv"), row.names = 1, header = T)
data7 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_2.csv"), row.names = 1, header = T)
data8 <- read.csv(paste0(input,"NoiseLV_0.2_BioRep_3.csv"), row.names = 1, header = T)
data9 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_1.csv"), row.names = 1, header = T)
data10 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_2.csv"), row.names = 1, header = T)
data11 <- read.csv(paste0(input,"NoiseLV_0.3_BioRep_3.csv"), row.names = 1, header = T)
data12 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_1.csv"), row.names = 1, header = T)
data13 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_2.csv"), row.names = 1, header = T)
data14 <- read.csv(paste0(input,"NoiseLV_0.4_BioRep_3.csv"), row.names = 1, header = T)
df.list <<- list(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
names(df.list) <<- c("NoiseLV_0_BioRep_1","NoiseLV_0_BioRep_2","NoiseLV_0_BioRep_3",
"NoiseLV_0.1_BioRep_1","NoiseLV_0.1_BioRep_2","NoiseLV_0.1_BioRep_3",
"NoiseLV_0.2_BioRep_1","NoiseLV_0.2_BioRep_2","NoiseLV_0.2_BioRep_3",
"NoiseLV_0.3_BioRep_1","NoiseLV_0.3_BioRep_2","NoiseLV_0.3_BioRep_3",
"NoiseLV_0.4_BioRep_1","NoiseLV_0.4_BioRep_2","NoiseLV_0.4_BioRep_3")
rm(data,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14)
save.image(file = output)
}
makeSingleDF("../Data/Raw2/Concate/Con_","../Data/Raw2/RawData_Con.Rdata")
makeSingleDF("../Data/Raw2/Avg/Avg_","../Data/Raw2/RawData_Avg.Rdata")
makeSingleDF("../Data/Raw2/RawData/","../Data/Raw2/RawData.Rdata")
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw2/RawData_Con.Rdata")
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Processed/Rain/RainData.Rdata")
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw2/RawData.Rdata")
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
plot(1:length(df.list[[3]][1,]),df.list[[2]][1,],"o")
plot(1:length(df.list[[3]][1,]),df.list[[3]][1,],"o")
load("/Users/elanness-cohn/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw2/RawData_Con.Rdata")
plot(1:length(df.list[[3]][1,]),df.list[[3]][1,],"o")
plot(1:length(df.list[[2]][1,]),df.list[[2]][1,],"o")
plot(1:length(df.list[[2]][1,]),df.list[[1]][1,],"o")
plot(1:length(df.list[[1]][1,]),df.list[[1]][1,],"o")
plot(1:length(df.list[[5]][1,]),df.list[[5]][1,],"o")
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/generateCSVDataFilesForEachExperiment.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/Plot1B.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/Plot1B.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/Plot1B.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
plot(1:length(output[11000,]),output[11000,],"o")
for(i in 10900:11000){
plot(1:length(output[11000,]),output[i,],"o")
}
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/SyntheticData.R', echo=TRUE)
#Source Files For Generating Synthetic Data Set
source(SyntheticData.R)
setwd("~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts")
#Source Files For Generating Synthetic Data Set
source("SyntheticData.R")
rm()
rm(list=ls())
rm(list=ls())
source("CollateReplicateDataFrames.R")
rm(list=ls())
source("AvgReplicateDataFrames.R")
rm(list=ls())
source("CreateSingleDataFrame.R")
rm(list=ls())
source("generateCSVDataFilesForEachExperiment.R")
rm(list=ls())
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/Plot1B.R', echo=TRUE)
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/Plot1B.R', echo=TRUE)
par(mfrow = c(10,10))
par(mar = c(1,1,1,1))
for (i in 10001:10100){
makePlot(i,"Decay",cols[11])
}
makePlot(10023,"Expenential",cols[17])
{
par(mfrow = c(3,3))
makePlot(8,"Sin",cols[1])
makePlot(1008,"Peak",cols[2])
makePlot(2008,"Saw",cols[3])
makePlot(3012,"Linear Trend",cols[4])
makePlot(4008,"Damped",cols[5])
makePlot(5008,"Amplified",cols[6])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(6008,"Contractile",cols[7])
par(mfrow = c(3,3))
makePlot(7010,"Flat",cols[8])
makePlot(8011,"Linear",cols[9])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(9012,"Sigmoid",cols[10])
makePlot(10023,"Expenential",cols[17])
}
{
par(mfrow = c(3,3))
makePlot(8,"Sin",cols[1])
makePlot(1008,"Peak",cols[2])
makePlot(2008,"Saw",cols[3])
makePlot(3012,"Linear Trend",cols[4])
makePlot(4008,"Damped",cols[5])
makePlot(5008,"Amplified",cols[6])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(6008,"Contractile",cols[7])
par(mfrow = c(3,3))
makePlot(7010,"Flat",cols[8])
makePlot(8011,"Linear",cols[9])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(9012,"Sigmoid",cols[10])
makePlot(10017,"Expenential",cols[11])
}
par(mfrow = c(3,3))
makePlot(7010,"Flat",cols[8])
makePlot(8011,"Linear",cols[9])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(9012,"Sigmoid",cols[10])
makePlot(10016,"Expenential",cols[11])
makePlot(4007,"Damped",cols[5])
makePlot(4006,"Damped",cols[5])
makePlot(4005,"Damped",cols[5])
makePlot(4003,"Damped",cols[5])
makePlot(4002,"Damped",cols[5])
makePlot(4009,"Damped",cols[5])
{
par(mfrow = c(3,3))
makePlot(8,"Sin",cols[1])
makePlot(1008,"Peak",cols[2])
makePlot(2008,"Saw",cols[3])
makePlot(3012,"Linear Trend",cols[4])
makePlot(4008,"Damped",cols[5])
makePlot(5008,"Amplified",cols[6])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(6008,"Contractile",cols[7])
par(mfrow = c(3,3))
makePlot(7010,"Flat",cols[8])
makePlot(8011,"Linear",cols[9])
plot(1, type="n", xlab="", ylab="", axes = F, xlim=c(0, 10), ylim=c(0, 10))
makePlot(9012,"Sigmoid",cols[10])
makePlot(10016,"Expenential",cols[11])
}
source('~/Desktop/CyclingMethodsReview/DataAnalysis/Scripts/Plot1B.R', echo=TRUE)
setwd("~/Desktop/CyclingMethodsReview/DataAnalysis/Data/Raw2/Concate/")
#Load List of Text Files
fileNames <- list.files(pattern="*3.csv")
data <- lapply(fileNames, read.csv)
data[[1]]
plot(1:length(data[[1]][1,]),data[[1]][1,],"o")
View(data)
plot(2:length(data[[1]][1,]),data[[1]][1,2:length(data[[1]][1,)],"o")
plot(2:length(data[[1]][1,]),data[[1]][1,2:length(data[[1]][1,])],"o")
plot(2:length(data[[1]][1,]),data[[2]][1,2:length(data[[1]][1,])],"o")
plot(2:length(data[[1]][1,]),data[[3]][1,2:length(data[[1]][1,])],"o")
plot(2:length(data[[1]][1,]),data[[4]][1,2:length(data[[1]][1,])],"o")
plot(2:length(data[[1]][1,]),data[[5]][1,2:length(data[[1]][1,])],"o")
setwd("~/Desktop/CyclingMethodsReview/DataAnalysis/Data/Processed2/BooteJTK/Concat_Experiments/")
#Load List of Text Files
data <- read.delim(file = "./2_36_NoiseLV_0.2_BioRep_3.txt", header = T, row.names = 1)
plot(2:length(data[1,]),data[1,],"o")
plot(1:length(data[1,]),data[1,],"o")
#Load List of Text Files
data <- read.delim(file = "./2_36_NoiseLV_0.2_BioRep_3.txt", header = T, row.names = 1)
plot(1:length(data[1,]),data[1,],"o")
plot(1:length(data[1,]),data[2,],"o")
#Load List of Text Files
data <- read.delim(file = "./2_96_NoiseLV_0.2_BioRep_3.txt", header = T, row.names = 1)
plot(1:length(data[1,]),data[2,],"o")
